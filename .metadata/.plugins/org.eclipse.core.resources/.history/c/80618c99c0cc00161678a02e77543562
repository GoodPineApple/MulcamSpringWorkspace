package controller;

import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import repository.FileDao;
import vo.MyFile;
import vo.UploadFile;

@Controller
public class FileController {
	
	@Autowired
	private FileDao dao;
	public void setDao(FileDao dao){
		this.dao = dao;
	}
	
	@RequestMapping("/fileList.do")
	public ModelAndView fileList(){
		ModelAndView mv = new ModelAndView("file_list");
		mv.addObject("fileList", dao.selectAll());
		return mv;
	}
	
	@RequestMapping("/uploadForm.do")
	public String uploadForm(){
		return "upload_form";
	}
	
	@RequestMapping(value="/upload.do", method=RequestMethod.POST)
	public ModelAndView upload(HttpServletRequest req, UploadFile uploadFile){
		String savePath = req.getServletContext().getRealPath("img");
		
		File dir = new File(savePath);
		if(dir.exists() == false) {
			dir.mkdir();
		}
		
		// 사용자가 업로드한 여러개의 파일 각각을 ~~/img/폴더에 저장한 후 데이터베이스 기록하는 반복문
		for(MultipartFile f : uploadFile.getFileList()){
			String savedName = savePath + "/" + 
							f.getOriginalFilename() + new Random().nextInt(100000000);
			File savedFile = new File(savedName);
			
			try {
				f.transferTo(savedFile); // 실제 업로드 작업
				
				MyFile myFile = new MyFile();
				myFile.setOriginalName(f.getOriginalFilename());
				myFile.setSavedPath(savedFile.getAbsolutePath());
				
				// 반복문 내의 현재 파일 업로드 정보를 DB에 기록
				dao.insert(myFile);
			} catch (IllegalStateException | IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		ModelAndView mv = new ModelAndView("upload_result");
		mv.addObject("fileCount", uploadFile.getFileList().size());
		return mv;
		
	}
	
}
